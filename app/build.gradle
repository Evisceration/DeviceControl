apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        release {
            def String localProps = System.getenv('SIGNING_PROP_FILE')
            if (localProps == null) {
                logger.quiet('Not signing the build!')
            } else {
                logger.quiet('Signing the build!')
                def Properties keyProps = new Properties()
                keyProps.load(new FileInputStream(file(localProps)))
                storeFile file(keyProps["store"])
                storePassword keyProps["storePass"]
                keyAlias keyProps["alias"]
                keyPassword keyProps["pass"]
            }
        }
    }

    defaultConfig {
        applicationId 'org.namelessrom.devicecontrol'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            debuggable false
            proguardFile 'src/main/proguard.pro'
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
        }
        debug {
            debuggable true
            proguardFile 'src/main/proguard.pro'
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
    }

    lintOptions {
        abortOnError false
        checkAllWarnings true
        // do not warn about translations
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    dexOptions {
        incremental false
        javaMaxHeapSize "2048M"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {}

    packagingOptions {
        exclude '.readme'
    }

}

dependencies {
    compile fileTree(dir: '../libs', include: ['*.jar'])

    // Debugging
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.android.support:support-v13:22.2.0'
    compile('com.github.Evisceration:AndroidSwipeLayout:6544102') {
        exclude group: 'com.google.android', module: 'recyclerview-v7'
        exclude group: 'com.google.android', module: 'support-v4'
    }
    compile 'com.github.Evisceration:logger:1.0.1'
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.0'
    compile 'com.google.android.gms:play-services:7.5.0'
    compile 'com.koushikdutta.ion:ion:2.1.3'

    def String propLocalMaterial = System.getenv('USE_LOCAL_MATERIALPREFERENCES_SOURCES')
    logger.quiet('propLocalMaterial -> ' + propLocalMaterial)
    def boolean useLocalMaterial = (propLocalMaterial != null)

    def String propPlatformBuild = System.getenv('TARGET_PRODUCT')
    logger.quiet('propPlatformBuild -> ' + propPlatformBuild)
    def boolean isPlatformBuild = (propPlatformBuild != null)

    if (!useLocalMaterial || isPlatformBuild) {
        logger.quiet('MaterialPrefernces -> release version')
        // the version code equals the release tag OR the shortcode of the commit to use
        compile 'com.github.Evisceration:MaterialPreferences:88ed97f7a4'
    } else {
        logger.quiet('MaterialPrefernces -> local sources')
        compile(project(':locallibs:MaterialPreferences:library')) {
            exclude group: 'com.google.android', module: 'appcompat-v7'
            exclude group: 'com.google.android', module: 'cardview-v7'
        }
    }
}
